{"version":3,"sources":["Form/Clock/styled.js","Form/Clock/index.js","Form/Clock/useCurrentDate.js","Form/styled.js","Form/index.js","Score/styled.js","Score/index.js","Container/styled.js","Container/index.js","options.js","App.js","reportWebVitals.js","index.js"],"names":["TimeAndDate","styled","div","formatDate","myDate","toLocaleDateString","weekday","day","month","hour","minute","second","Clock","useState","Date","setMyDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","FormFieldset","fieldset","FormLegend","legend","LabelText","span","FormSelect","select","FormInput","input","FormButton","button","Form","amount","setAmount","options","option","setOption","setScore","score","onSubmit","event","preventDefault","rate","find","value","converter","calculateScore","name","onChange","target","map","label","id","required","type","min","step","ScoreElement","Score","MainContainer","main","Container","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0203f828.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const TimeAndDate = styled.div`\n    text-align: right;\n    margin-bottom: 20px;\n    font-family: 'Roboto Mono', monospace;\n    font-size: 13px;\n`;","import React from 'react';\nimport { TimeAndDate } from './styled';\nimport {useCurrentDate} from \"./useCurrentDate\";\n\nconst formatDate = (myDate) => myDate.toLocaleDateString(\"pl-PL\", {\n  weekday: \"long\",\n  day: \"numeric\",\n  month: \"long\",\n  hour: \"2-digit\",\n  minute: \"2-digit\",\n  second: \"2-digit\",\n});\n\nconst Clock = () => {\n  const myDate = useCurrentDate();\n\n  return (\n    <TimeAndDate>\n      Dzisiaj jest\n      {\" \"}\n      {formatDate(myDate)}\n    </TimeAndDate>\n  );\n};\n\nexport default Clock;","import {useState, useEffect} from 'react';\n\nexport const useCurrentDate = () => {\n  const [myDate, setMyDate] = useState(new Date())\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setMyDate(new Date())\n    }, 1000);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  return myDate;\n};","import styled from \"styled-components\";\n\nexport const FormFieldset = styled.fieldset`\n    box-shadow: 10px 10px 28px 0px rgba(0, 0, 0, 0.75);\n    background-color: white;\n    padding: 20px;\n    border: 5px solid rgb(9, 177, 177);\n    border-radius: 10px;\n    margin: 20px 0;\n`;\n\nexport const FormLegend = styled.legend`\n    font-weight: bold;\n    background-color: rgb(9, 177, 177);\n    color: white;\n    padding: 10px;\n    border-radius: 10px;\n    font-size: larger;\n`;\n\nexport const LabelText = styled.span`\n    width: 100%;\n    max-width: 150px;\n    display: inline-block;\n    margin-right: 5px;\n    font-size: large;\n    vertical-align: middle;\n`;\n\nexport const FormSelect = styled.select`\n    border: 3px solid #ccc;\n    padding: 10px;\n    margin-top: 10px;\n    width: 100%;\n    max-width: 400px;\n    border-radius: 10px;\n    transition: 1s;\n    vertical-align: middle;\n\n    &:hover {\n        transform: scale(1.05);\n    }\n`;\n\nexport const FormInput = styled.input`\n    border: 3px solid #ccc;\n    padding: 10px;\n    margin-top: 10px;\n    width: 100%;\n    max-width: 400px;\n    border-radius: 10px;\n    transition: 1s;\n    vertical-align: middle;\n\n    &:hover {\n        transform: scale(1.05);\n    }\n`;\n\nexport const FormButton = styled.button`\n    box-shadow: 10px 10px 28px 0px rgba(0, 0, 0, 0.75);\n    font-weight: bold;\n    width: 100%;\n    border: none;\n    padding: 10px;\n    border-radius: 10px;\n    border: 3px solid white;\n    background-color: rgb(9, 177, 177);\n    color: white;\n    transition: 1s;\n    font-size: large;\n\n    &:hover {\n        background-color: hsl(180, 90%, 20%);\n        transform: scale(1.05);\n    }\n\n    &:active {\n        background-color: hsl(180, 90%, 10%);\n    }\n`;","import React from 'react';\nimport Clock from './Clock';\nimport {FormSelect, FormFieldset, FormLegend, LabelText, FormInput, FormButton} from \"./styled\";\n\nconst Form = ({ amount, setAmount, options, option, setOption, setScore, score }) => {\n\n  const onSelectChange = ({ target }) => {\n    setOption(target.value);\n    setScore(score => score = \"N/a\")\n  };\n\n  const calculateScore = (options, amount) => {\n    const rate = options\n      .find(({ value }) => value === option)\n      .converter;\n\n    setScore(score = amount * rate);\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    calculateScore(options, amount);\n  };\n\n  return (\n    <form\n      onSubmit={onFormSubmit}\n    >\n      <FormFieldset>\n        <Clock />\n        <FormLegend>Kalkulator Walutowy</FormLegend>\n        <LabelText>Wybierz walutę: </LabelText>\n        <FormSelect\n          name=\"currency\"\n          value={option}\n          onChange={onSelectChange}\n        >\n          {options.map((option) => (\n            <option\n              value={option.value}\n              key={option.id}\n            >\n              {option.label}\n            </option>\n          ))}\n        </FormSelect>\n        <p>\n          <label>\n            <LabelText>\n              Podaj kwotę do przeliczenia w zł:\n            </LabelText>\n            <FormInput\n              required\n              type=\"number\"\n              min=\"0.01\"\n              step=\"0.01\"\n              value={amount}\n              onChange={({ target }) => setAmount(target.value)}\n            />\n          </label>\n        </p>\n      </FormFieldset>\n      <p>\n        <FormButton>Oblicz!</FormButton>\n      </p>\n    </form>\n  );\n};\n\nexport default Form;","import styled from \"styled-components\";\n\nexport const ScoreElement = styled.div`\n    box-shadow: 10px 10px 28px 0px rgba(0, 0, 0, 0.75);\n    color: white;\n    background-color: rgb(9, 177, 177);\n    text-align: center;\n    font-size: larger;\n    border: 3px solid white;\n    padding: 20px;\n    margin: 10px 0;\n    border-radius: 10px;\n    transition: 1s;\n\n    &:hover {\n        background-color: hsl(180, 90%, 20%);\n        transform: scale(1.05);\n    }\n`;","import React from 'react';\nimport { ScoreElement } from \"./styled\";\n\nconst Score = ({ option, amount, score }) => {\n  return (\n    <ScoreElement>\n      <strong>{amount}</strong> PLN to: <strong>{score}</strong> {option}\n    </ScoreElement>\n  );\n};\n\nexport default Score;","import styled from \"styled-components\";\n\nexport const MainContainer = styled.main`\n    flex-basis: 700px;\n    margin: 0 auto;\n    padding: 0 20px;\n`;","import React from 'react';\nimport { MainContainer } from \"./styled\";\n\nconst Container = ({ children }) => (\n    <MainContainer>\n        {children}\n    </MainContainer>\n);\n\nexport default Container;\n","export const options = [\n    {\n      id: 1,\n      label: \"Euro\",\n      value: \"EUR\",\n      converter: 4.51,\n    },\n\n    {\n      id: 2,\n      label: \"Magiczna Ruda\",\n      value: \"RUDY\",\n      converter: 21,\n    },\n    {\n      id: 3,\n      label: \"Dolar\",\n      value: \"USD\",\n      converter: 3.50,\n    }\n  ];","import React, { useState } from 'react';\nimport './App.css';\nimport Form from './Form';\nimport Score from './Score';\nimport Container from './Container';\nimport { options } from './options';\n\nfunction App() {\n\n  const [score, setScore] = useState(\"N/a\")\n  const [amount, setAmount] = useState(0);\n  const [option, setOption] = useState(\"EUR\");\n\n  return (\n    <Container>\n\n      <Form\n        option={option}\n        setOption={setOption}\n        amount={amount}\n        setAmount={setAmount}\n        score={score}\n        setScore={setScore}\n        options={options}\n      />\n\n      <Score\n        option={option}\n        score={score}\n        amount={amount}\n      />\n\n    </Container>\n\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}